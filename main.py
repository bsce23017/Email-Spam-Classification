# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wtIQXFnBDTYHKMmilHfU7rBsSfPTRRdy
"""

import pandas as pd
import string, re
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from google.colab import files

print("Upload spam dataset:")
uploaded = files.upload()
file_name = list(uploaded.keys())[0]

data = pd.read_csv(file_name, encoding='latin-1')[["v1","v2"]]
data.columns = ["label","text"]
data["label"] = data["label"].map({"spam":1,"ham":0})

def clean_text(text):
    text = str(text).lower()
    text = re.sub(r"http\S+", "", text)
    text = re.sub(r"\S+@\S+", "", text)
    text = re.sub(r"\d+", "", text)
    text = text.translate(str.maketrans("", "", string.punctuation))
    text = text.strip()
    return text

data["clean_text"] = data["text"].apply(clean_text)

# Long phishing/malware/payment scams
long_spam = [
    ("Dear User, You won Mega Lottery. Send full name, address, bank details in 48 hours to claim!",1),
    ("Attention! Malware detected on your PC. Call 1-800-FAKEHELP or download fix now!",1),
    ("Dear Customer, Payment failed. Confirm credit card now or order canceled!",1),
    ("Your bank account at risk! Verify now to avoid suspension.",1),
    ("Your PayPal account has unusual activity. Confirm login to secure.",1)
]

# Short promotional spam
short_spam = [
    ("Congratulations! You won free iPhone!",1),
    ("Win new car today!",1),
    ("Get free gift card now!",1),
    ("Claim $1000 cash prize instantly!",1),
    ("Exclusive offer: Buy 1 get 1 free!",1),
    ("Free iPhone for first 100 responders!",1),
    ("Hurry! Limited time prize!",1),
    ("You selected to win rewards!",1)
]

# Short phishing/payment alerts
short_phishing = [
    ("Your PayPal account has unusual activity. Confirm login immediately.",1),
    ("Bank account at risk! Verify your login now.",1),
    ("Your credit card payment failed. Confirm details to avoid cancel.",1),
    ("Suspicious login detected in your account. Confirm now.",1),
    ("You received important message from PayPal. Login to see.",1)
]

# Ham emails
ham_emails = [
    ("Hey Ali, Are we meeting tomorrow at cafe?",0),
    ("Hi Mom, Just arrived safely. Weather good.",0),
    ("Reminder: Your electricity bill due 5th Oct.",0),
    ("Hello team, attached project report Q3.",0),
    ("Meeting 3 PM today. Bring reports.",0),
    ("Lunch 1 PM cafeteria. Confirm.",0),
    ("Happy Birthday! Have great day!",0),
    ("Appointment with Dr. Ahmed 10 AM tomorrow.",0)
]

extra_emails = long_spam + short_spam + short_phishing + ham_emails
extra_df = pd.DataFrame(extra_emails, columns=["text","label"])
extra_df["clean_text"] = extra_df["text"].apply(clean_text)

data = pd.concat([data, extra_df], ignore_index=True)

X_train, X_test, y_train, y_test = train_test_split(
    data["clean_text"], data["label"], test_size=0.2, random_state=42
)

vectorizer = TfidfVectorizer(stop_words="english", ngram_range=(1,3), max_features=20000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

model = RandomForestClassifier(n_estimators=700, max_depth=None, random_state=42, n_jobs=-1)
model.fit(X_train_tfidf, y_train)

y_pred = model.predict(X_test_tfidf)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))
print(confusion_matrix(y_test, y_pred))

def test_email(email_text):
    cleaned = clean_text(email_text)
    email_tfidf = vectorizer.transform([cleaned])
    pred = model.predict(email_tfidf)[0]
    print("⚠️ SPAM detected!" if pred==1 else "✅ Not Spam (HAM)")

emails_to_test = [
    "Dear User, You won Mega Lottery. Send full name, address, bank details in 48 hours to claim!",  # Spam
    "Hey Ali, Are we meeting tomorrow at cafe?",  # Ham
    "Hi Mom, Just arrived safely. Weather good.",  # Ham
    "Attention! Malware detected on your PC. Call 1-800-FAKEHELP or download fix now!",  # Spam
    "Your PayPal account has unusual activity, Confirm login to secure. Update your billing info immediately to avoid account suspension. You need to pay 1$ fees for account recovery which will return soon, Click here to confirm your payment.",  # Spam
    "Congratulations! You won free iPhone!",  # Spam
    "Claim $1000 cash prize instantly!",  # Spam
    "Win new car today!",  # Spam
    "Your PayPal has unusual activity. Confirm login to secure.",  # Spam
    "Your PayPal account has unusual activity. Confirm login immediately.",  # Spam
    "Bank account at risk! Verify your login now.",  # Spam
    "Exclusive offer: Buy 1 get 1 free!"  # Spam
]

for email in emails_to_test:
    test_email(email)



#Example test
print("\n Trying your spam emails:")
test_email("Congratulations! You won a free iPhone!")
test_email("Please call our customer service representative on 0800 169 6031 between 10am-9pm as you have WON a guaranteed 1000 cash or 5000 prize!")
test_email("Reply to win 100 weekly! Where will the 2026 FIFA World Cup be held? Send STOP to 87239 to end service")